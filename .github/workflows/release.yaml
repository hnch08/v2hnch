name: Go - Build with Wails

on:
  push:
    tags:
      - "v*.*.*" # 触发条件：tag 以 'v' 开头，例如 v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        include:
          # Linux AMD64
          - os: ubuntu-latest
            os_type: linux
            container: null
            arch: amd64
            build_command: "wails build"
            package_command: "nfpm pkg --packager deb --target ./dist -f ./nfpm_amd64.yaml"
            artifact_name: "app-linux-amd64"

          # Linux ARM64 (用 golang 官方镜像)
          - os: ubuntu-latest
            os_type: linux
            container:
              image: golang:1.20-bullseye
            arch: arm64
            build_command: "wails build"
            package_command: "nfpm pkg --packager deb --target ./dist -f ./nfpm_arm64.yaml"
            artifact_name: "app-linux-arm64"

          # Windows AMD64
          - os: windows-latest
            os_type: windows
            container: null
            arch: amd64
            build_command: "wails build --nsis"
            artifact_name: "app-windows-amd64-setup.exe"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        if: matrix.container == null
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Set Tag as Environment Variable
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Dependencies (Linux only)
        if: matrix.os_type == 'linux'
        run: |
          apt-get update
          apt-get install -y ca-certificates curl gnupg
          update-ca-certificates
          # 安装 nfpm
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
          apt update
          apt install -y nfpm
          # 安装 Wails CLI
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Dependencies (Windows only)
        if: matrix.os_type == 'windows'
        run: |
          echo "Installing Wails CLI for Windows..."
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
        shell: pwsh

      - name: Create dist directory (Linux only)
        if: matrix.os_type == 'linux'
        run: mkdir -p ./dist

      - name: Build Project
        run: |
          echo "Building for ${{ matrix.os }} (${{ matrix.arch }}) with version ${{ env.VERSION }}"
          ${{ matrix.build_command }}
        shell: bash

      - name: Package with NFPM (Linux only)
        if: matrix.os_type == 'linux'
        run: |
          echo "Packaging for Linux (${{ matrix.arch }})"
          ${{ matrix.package_command }}
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ (matrix.os_type == 'linux' && matrix.arch == 'amd64') && './dist/v2hnch_${{ env.VERSION }}_amd64.deb' || '' }}
            ${{ (matrix.os_type == 'linux' && matrix.arch == 'arm64') && './dist/v2hnch_${{ env.VERSION }}_arm64.deb' || '' }}
            ${{ (matrix.os_type == 'windows') && './build/bin/创合AI登录器.exe' || '' }}
          if-no-files-found: error
